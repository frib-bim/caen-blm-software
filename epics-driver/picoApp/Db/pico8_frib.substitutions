# Macro       Default  Description
# -----       -------  -----------
# NAME                 Name of the device support created with createPICO8
# SYS         "DIAG"   System name from the naming standard
# SSYS                 Subsystem from the naming standard (for instance, MTCA01)
# DEV         $(NAME)  Device name from the naming standard (for instace, PICO3)
# SDEV                 Sub-device name from the naming standard. Examples: CTRL, CH1, etc...
# NELM        1000000  Number of elements in waveforms
# ASLO0..7    1e6      ASLO for channels 0..7

global {
    NAME="\$(NAME)",
    SYS="\$(SYS=DIAG)", SSYS="\$(SSYS)",
    DEV="\$(DEV=$(NAME))", SDEV="\$(SDEV)",
    NELM="\$(NELM=1000000)", EGU="uA", SDEVCH="CH$(CH)",

    # Default ASLO for each individual channel
    ASLO0="\$(ASLO0=1e6)", ASLO1="\$(ASLO1=1e6)",
    ASLO2="\$(ASLO2=1e6)", ASLO3="\$(ASLO3=1e6)",
    ASLO4="\$(ASLO4=1e6)", ASLO5="\$(ASLO5=1e6)",
    ASLO6="\$(ASLO6=1e6)", ASLO7="\$(ASLO7=1e6)",
}

# Per card records
file "pico8_base.template" {
{ }
}

# Per channel records
file "pico8_chan.template" {
pattern
{ CH, ASLO,      CORR,      CTRL,      BIT  }
{ 0,  $(ASLO0), "0x300c0", "0x300e0", "0"  }
{ 1,  $(ASLO1), "0x300c4", "0x300e0", "16" }
{ 2,  $(ASLO2), "0x300c8", "0x300e4", "0"  }
{ 3,  $(ASLO3), "0x300cc", "0x300e4", "16" }
{ 4,  $(ASLO4), "0x300d0", "0x300e8", "0"  }
{ 5,  $(ASLO5), "0x300d4", "0x300e8", "16" }
{ 6,  $(ASLO6), "0x300d8", "0x300ec", "0"  }
{ 7,  $(ASLO7), "0x300dc", "0x300ec", "16" }
}

# Per channel trip records
file "pico8_trip_chan.template" {
pattern
{ CH, ASLO,     LO1,  HI1,  LO2,  HI2,  LO3,  HI3,  LO4,  HI4,  SPK1, SPK2, NOKMSK, NOK  }
{ 0,  $(ASLO0), 0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xF0, 0xF1, 0xA0,   0xA8 }
{ 1,  $(ASLO1), 0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF, 0xF2, 0xF3, 0xA1,   0xA9 }
{ 2,  $(ASLO2), 0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xF4, 0xF5, 0xA2,   0xAA }
{ 3,  $(ASLO3), 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xF6, 0xF7, 0xA3,   0xAB }
{ 4,  $(ASLO4), 0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xF8, 0xF9, 0xA4,   0xAC }
{ 5,  $(ASLO5), 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF, 0xFA, 0xFB, 0xA5,   0xAD }
{ 6,  $(ASLO6), 0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xFC, 0xFD, 0xA6,   0xAE }
{ 7,  $(ASLO7), 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xFE, 0xFF, 0xA7,   0xAF }
}

#
# 100 Hz data
#

# Per card 100Hz data
global { PHAS="-5" }

file "pico8_cap_base.template" {
pattern
{ SIG,   ADDR  }
{ "SEC", "0x0" }
{ "NS",  "0x4" }
{ "TON", "0x8" }
{ "FLG", "0xc" }
}

# Per channel 100Hz data
global { PHAS="-3" }

file "pico8_cap_chan.template" {
pattern
{ CH, SIG,    ADDR,   ASLO,       ESLO        }
{ 0,  "AVG",  "0x10", "$(ASLO0)",  "1e-4"     }
{ 1,  "AVG",  "0x24", "$(ASLO1)",  "1e-4"     }
{ 2,  "AVG",  "0x38", "$(ASLO2)",  "1e-4"     }
{ 3,  "AVG",  "0x4c", "$(ASLO3)",  "1e-4"     }
{ 4,  "AVG",  "0x60", "$(ASLO4)",  "1e-4"     }
{ 5,  "AVG",  "0x74", "$(ASLO5)",  "1e-4"     }
{ 6,  "AVG",  "0x88", "$(ASLO6)",  "1e-4"     }
{ 7,  "AVG",  "0x9c", "$(ASLO7)",  "1e-4"     }

{ 0,  "MIN",  "0x14", "$(ASLO0)",  "1"        }
{ 1,  "MIN",  "0x28", "$(ASLO1)",  "1"        }
{ 2,  "MIN",  "0x3c", "$(ASLO2)",  "1"        }
{ 3,  "MIN",  "0x50", "$(ASLO3)",  "1"        }
{ 4,  "MIN",  "0x64", "$(ASLO4)",  "1"        }
{ 5,  "MIN",  "0x78", "$(ASLO5)",  "1"        }
{ 6,  "MIN",  "0x8c", "$(ASLO6)",  "1"        }
{ 7,  "MIN",  "0xa0", "$(ASLO7)",  "1"        }

{ 0,  "MAX",  "0x18", "$(ASLO0)",  "1"        }
{ 1,  "MAX",  "0x2c", "$(ASLO1)",  "1"        }
{ 2,  "MAX",  "0x40", "$(ASLO2)",  "1"        }
{ 3,  "MAX",  "0x54", "$(ASLO3)",  "1"        }
{ 4,  "MAX",  "0x68", "$(ASLO4)",  "1"        }
{ 5,  "MAX",  "0x7c", "$(ASLO5)",  "1"        }
{ 6,  "MAX",  "0x90", "$(ASLO6)",  "1"        }
{ 7,  "MAX",  "0xa4", "$(ASLO7)",  "1"        }

# Use AVEPK and SSQR to generate STD = SQRT( SSQR - AVEPK*AVEPK )
# AVEPK already averaged during 10ms.  1e6 for A -> uA
{ 0,  "AVGPK", "0x1c", "$(ASLO0)", "1"        }
{ 1,  "AVGPK", "0x30", "$(ASLO1)", "1"        }
{ 2,  "AVGPK", "0x44", "$(ASLO2)", "1"        }
{ 3,  "AVGPK", "0x58", "$(ASLO3)", "1"        }
{ 4,  "AVGPK", "0x6c", "$(ASLO4)", "1"        }
{ 5,  "AVGPK", "0x80", "$(ASLO5)", "1"        }
{ 6,  "AVGPK", "0x94", "$(ASLO6)", "1"        }
{ 7,  "AVGPK", "0xa8", "$(ASLO7)", "1"        }

# SSQR already averaged during 10ms.  1e12 for A*A -> uA*uA
{ 0,  "SSQR", "0x20", "$(ASLO0)",  "$(ASLO0)" }
{ 1,  "SSQR", "0x34", "$(ASLO1)",  "$(ASLO1)" }
{ 2,  "SSQR", "0x48", "$(ASLO2)",  "$(ASLO2)" }
{ 3,  "SSQR", "0x5c", "$(ASLO3)",  "$(ASLO3)" }
{ 4,  "SSQR", "0x70", "$(ASLO4)",  "$(ASLO4)" }
{ 5,  "SSQR", "0x84", "$(ASLO5)",  "$(ASLO5)" }
{ 6,  "SSQR", "0x98", "$(ASLO6)",  "$(ASLO6)" }
{ 7,  "SSQR", "0xac", "$(ASLO7)",  "$(ASLO7)" }
}

# Fast peak average
global { PHAS="-2" }

file "pico8_peak_avg_chan.template" {
pattern
{ CH }
{ 0  }
{ 1  }
{ 2  }
{ 3  }
{ 4  }
{ 5  }
{ 6  }
{ 7  }
}

#
# EEPROM and FPGA records
#

# Per card EEPROM records
file "pico8_eeprom_base.template" {
{ }
}

# Per channel EEPROM records
file "pico8_eeprom_chan.template" {
pattern
{ CH, ASLO       }
{ 0,  "$(ASLO0)" }
{ 1,  "$(ASLO1)" }
{ 2,  "$(ASLO2)" }
{ 3,  "$(ASLO3)" }
{ 4,  "$(ASLO4)" }
{ 5,  "$(ASLO5)" }
{ 6,  "$(ASLO6)" }
{ 7,  "$(ASLO7)" }
}

# Per channel EEPROM registers
file "pico8_eeprom_reg.template" {
pattern
{ CH, SIG,           EEPROM, OFFSET, EGU    }
# Ch 0-3, Range 0
{ 0,  "RNG0_EEGAIN", "1",    "0xD5", ""     }
{ 1,  "RNG0_EEGAIN", "1",    "0xDD", ""     }
{ 2,  "RNG0_EEGAIN", "1",    "0xE5", ""     }
{ 3,  "RNG0_EEGAIN", "1",    "0xED", ""     }
{ 0,  "RNG0_EEOFST", "1",    "0xD9", "A"    }
{ 1,  "RNG0_EEOFST", "1",    "0xE1", "A"    }
{ 2,  "RNG0_EEOFST", "1",    "0xE9", "A"    }
{ 3,  "RNG0_EEOFST", "1",    "0xF1", "A"    }

# Ch 0-3, Range 1
{ 0,  "RNG1_EEGAIN", "1",    "0xF5",  ""    }
{ 1,  "RNG1_EEGAIN", "1",    "0xFD",  ""    }
{ 2,  "RNG1_EEGAIN", "1",    "0x105", ""    }
{ 3,  "RNG1_EEGAIN", "1",    "0x10D", ""    }
{ 0,  "RNG1_EEOFST", "1",    "0xF9",  "A"   }
{ 1,  "RNG1_EEOFST", "1",    "0x101", "A"   }
{ 2,  "RNG1_EEOFST", "1",    "0x109", "A"   }
{ 3,  "RNG1_EEOFST", "1",    "0x111", "A"   }

# Ch 4-7, Range 0
{ 4,  "RNG0_EEGAIN", "0",    "0xD5", ""     }
{ 5,  "RNG0_EEGAIN", "0",    "0xDD", ""     }
{ 6,  "RNG0_EEGAIN", "0",    "0xE5", ""     }
{ 7,  "RNG0_EEGAIN", "0",    "0xED", ""     }
{ 4,  "RNG0_EEOFST", "0",    "0xD9", "A"    }
{ 5,  "RNG0_EEOFST", "0",    "0xE1", "A"    }
{ 6,  "RNG0_EEOFST", "0",    "0xE9", "A"    }
{ 7,  "RNG0_EEOFST", "0",    "0xF1", "A"    }

# Ch 4-7, Range 1
{ 4,  "RNG1_EEGAIN", "0",    "0xF5",  ""    }
{ 5,  "RNG1_EEGAIN", "0",    "0xFD",  ""    }
{ 6,  "RNG1_EEGAIN", "0",    "0x105", ""    }
{ 7,  "RNG1_EEGAIN", "0",    "0x10D", ""    }
{ 4,  "RNG1_EEOFST", "0",    "0xF9",  "A"   }
{ 5,  "RNG1_EEOFST", "0",    "0x101", "A"   }
{ 6,  "RNG1_EEOFST", "0",    "0x109", "A"   }
{ 7,  "RNG1_EEOFST", "0",    "0x111", "A"   }
}

# Per card FPGA records
file "pico8_fpga_base.template" {
{ }
}

# Per channel FPGA records
file "pico8_fpga_reg.template" {
pattern
{ CH, SIG,             OFFSET, EGU  }
{ 0,  "RNG0_FPGAGAIN", "0x00", ""   }
{ 1,  "RNG0_FPGAGAIN", "0x04", ""   }
{ 2,  "RNG0_FPGAGAIN", "0x08", ""   }
{ 3,  "RNG0_FPGAGAIN", "0x0C", ""   }
{ 4,  "RNG0_FPGAGAIN", "0x10", ""   }
{ 5,  "RNG0_FPGAGAIN", "0x14", ""   }
{ 6,  "RNG0_FPGAGAIN", "0x18", ""   }
{ 7,  "RNG0_FPGAGAIN", "0x1C", ""   }

{ 0,  "RNG0_FPGAOFST", "0x20", "A"  }
{ 1,  "RNG0_FPGAOFST", "0x24", "A"  }
{ 2,  "RNG0_FPGAOFST", "0x28", "A"  }
{ 3,  "RNG0_FPGAOFST", "0x2C", "A"  }
{ 4,  "RNG0_FPGAOFST", "0x30", "A"  }
{ 5,  "RNG0_FPGAOFST", "0x34", "A"  }
{ 6,  "RNG0_FPGAOFST", "0x38", "A"  }
{ 7,  "RNG0_FPGAOFST", "0x3C", "A"  }

{ 0,  "RNG1_FPGAGAIN", "0x40", ""   }
{ 1,  "RNG1_FPGAGAIN", "0x44", ""   }
{ 2,  "RNG1_FPGAGAIN", "0x48", ""   }
{ 3,  "RNG1_FPGAGAIN", "0x4C", ""   }
{ 4,  "RNG1_FPGAGAIN", "0x50", ""   }
{ 5,  "RNG1_FPGAGAIN", "0x54", ""   }
{ 6,  "RNG1_FPGAGAIN", "0x58", ""   }
{ 7,  "RNG1_FPGAGAIN", "0x5C", ""   }

{ 0,  "RNG1_FPGAOFST", "0x60", "A"  }
{ 1,  "RNG1_FPGAOFST", "0x64", "A"  }
{ 2,  "RNG1_FPGAOFST", "0x68", "A"  }
{ 3,  "RNG1_FPGAOFST", "0x6C", "A"  }
{ 4,  "RNG1_FPGAOFST", "0x70", "A"  }
{ 5,  "RNG1_FPGAOFST", "0x74", "A"  }
{ 6,  "RNG1_FPGAOFST", "0x78", "A"  }
{ 7,  "RNG1_FPGAOFST", "0x7C", "A"  }
}

# Per channel EEPROM and FPGA automatic offset calculation
file "pico8_eeprom_fpga_offset_chan.template" {
pattern
{ CH  }
{ 0   }
{ 1   }
{ 2   }
{ 3   }
{ 4   }
{ 5   }
{ 6   }
{ 7   }
}



#
# Per channel 100 Hz decimation into 5Hz (via tbufs)
#

# For following tbufs
global {
    SDEV="CH$(CH)",
    SRC="$(SYS)_$(SSYS):$(DEV)_$(SDEVCH):$(SIG)F_RD",
    PREC="6",
    WEIGHT="$(SYS)_$(SSYS):$(DEV)_CAP:TON_RSTS",
    IGN_WGH="$(SYS)_$(SSYS):$(DEV)_$(SDEVCH):CWBEAM_CSET",
    PHAS="1", NELM="20"
}

file "tbuf.template" {
pattern
{ CH, SIG,    Stat    }
{ 0,  "MIN",  "Min"   }
{ 1,  "MIN",  "Min"   }
{ 2,  "MIN",  "Min"   }
{ 3,  "MIN",  "Min"   }
{ 4,  "MIN",  "Min"   }
{ 5,  "MIN",  "Min"   }
{ 6,  "MIN",  "Min"   }
{ 7,  "MIN",  "Min"   }

{ 0,  "MAX",  "Max"   }
{ 1,  "MAX",  "Max"   }
{ 2,  "MAX",  "Max"   }
{ 3,  "MAX",  "Max"   }
{ 4,  "MAX",  "Max"   }
{ 5,  "MAX",  "Max"   }
{ 6,  "MAX",  "Max"   }
{ 7,  "MAX",  "Max"   }
}

file "tbuf_smart_avg.template" {
pattern
{ CH, SIG,    SRC,                                       Stat,        FRC1HZ }
{ 0,  "ASTD", "$(SYS)_$(SSYS):$(DEV)_$(SDEVCH):AVGF_RD", "MaskedStd", "1"    }
{ 1,  "ASTD", "$(SYS)_$(SSYS):$(DEV)_$(SDEVCH):AVGF_RD", "MaskedStd", "1"    }
{ 2,  "ASTD", "$(SYS)_$(SSYS):$(DEV)_$(SDEVCH):AVGF_RD", "MaskedStd", "1"    }
{ 3,  "ASTD", "$(SYS)_$(SSYS):$(DEV)_$(SDEVCH):AVGF_RD", "MaskedStd", "1"    }
{ 4,  "ASTD", "$(SYS)_$(SSYS):$(DEV)_$(SDEVCH):AVGF_RD", "MaskedStd", "1"    }
{ 5,  "ASTD", "$(SYS)_$(SSYS):$(DEV)_$(SDEVCH):AVGF_RD", "MaskedStd", "1"    }
{ 6,  "ASTD", "$(SYS)_$(SSYS):$(DEV)_$(SDEVCH):AVGF_RD", "MaskedStd", "1"    }
{ 7,  "ASTD", "$(SYS)_$(SSYS):$(DEV)_$(SDEVCH):AVGF_RD", "MaskedStd", "1"    }
}

file "tbuf_smart_avg.template" {
pattern

# Averages
{ CH, SIG,   Stat         }
{ 0,  "AVG", "SpecialAvg" }
{ 1,  "AVG", "SpecialAvg" }
{ 2,  "AVG", "SpecialAvg" }
{ 3,  "AVG", "SpecialAvg" }
{ 4,  "AVG", "SpecialAvg" }
{ 5,  "AVG", "SpecialAvg" }
{ 6,  "AVG", "SpecialAvg" }
{ 7,  "AVG", "SpecialAvg" }

# Stddev
{ 0,  "STD", "MaskedAvg" }
{ 1,  "STD", "MaskedAvg" }
{ 2,  "STD", "MaskedAvg" }
{ 3,  "STD", "MaskedAvg" }
{ 4,  "STD", "MaskedAvg" }
{ 5,  "STD", "MaskedAvg" }
{ 6,  "STD", "MaskedAvg" }
{ 7,  "STD", "MaskedAvg" }

# Peak Averages
{ 0,  "PKAVG", "MaskedAvg" }
{ 1,  "PKAVG", "MaskedAvg" }
{ 2,  "PKAVG", "MaskedAvg" }
{ 3,  "PKAVG", "MaskedAvg" }
{ 4,  "PKAVG", "MaskedAvg" }
{ 5,  "PKAVG", "MaskedAvg" }
{ 6,  "PKAVG", "MaskedAvg" }
{ 7,  "PKAVG", "MaskedAvg" }

}

# Records for STD and AVGPK
file "pico8_std_avgpk_chan.template" {
pattern
{ CH  }
{ 0   }
{ 1   }
{ 2   }
{ 3   }
{ 4   }
{ 5   }
{ 6   }
{ 7   }
}

# Saturation indicators

# "Slow" min/max, based on 5Hz min/max
global {
    SDEV="CH$(CH)",
    SIG="S$(S)",
    SRC="$(SYS)_$(SSYS):$(DEV)_$(SDEVCH):$(S)_RD CP",
    PREC="6",
    NELM="5",
    PERIOD="0.2",
    SCAN="Passive"
}

file "tbuf.template" {
pattern
{ CH, S,     Stat  }
{ 0,  "MIN", "Min" }
{ 1,  "MIN", "Min" }
{ 2,  "MIN", "Min" }
{ 3,  "MIN", "Min" }
{ 4,  "MIN", "Min" }
{ 5,  "MIN", "Min" }
{ 6,  "MIN", "Min" }
{ 7,  "MIN", "Min" }
{ 0,  "MAX", "Max" }
{ 1,  "MAX", "Max" }
{ 2,  "MAX", "Max" }
{ 3,  "MAX", "Max" }
{ 4,  "MAX", "Max" }
{ 5,  "MAX", "Max" }
{ 6,  "MAX", "Max" }
{ 7,  "MAX", "Max" }
}

global {
    RNGSEL="$(SYS)_$(SSYS):$(DEV)_$(SDEVCH):RNG_CMD",
    RNG0="$(SYS)_$(SSYS):$(DEV):EEPROM_RNG0_RD",
    RNG1="$(SYS)_$(SSYS):$(DEV):EEPROM_RNG1_RD",
    MIN="$(SYS)_$(SSYS):$(DEV)_$(SDEVCH):SMIN_RD",
    MAX="$(SYS)_$(SSYS):$(DEV)_$(SDEVCH):SMAX_RD",
    THRES="1.5"
}

file "pico8_saturation_chan.template" {
pattern
{ CH  }
{ 0   }
{ 1   }
{ 2   }
{ 3   }
{ 4   }
{ 5   }
{ 6   }
{ 7   }
}

